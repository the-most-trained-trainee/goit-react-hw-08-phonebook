{"version":3,"file":"static/js/313.6e41e32b.chunk.js","mappings":"yPAOMA,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KAAaE,QACpBC,SAAUH,EAAAA,KAAaI,IAAI,GAAGC,IAAI,IAAIC,aAGlCC,EAAgB,CAAEL,MAAO,GAAIC,SAAU,IAgE7C,UA9DkB,WAChB,IAAMK,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAQXC,GAASC,EAAAA,EAAAA,IAAU,CACvBN,cAAeA,EACfO,iBAAkBf,EAClBgB,SATmB,SAACC,EAAQC,GAC5BT,GAASU,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,YACRT,EAAS,YACV,IAQD,OACE,4BACE,UAAC,IAAD,CAAYU,GAAI,EAAhB,yCAC6B,SAAC,IAAD,CAAMC,KAAK,WAAX,+BAG7B,kBAAMN,SAAUH,EAAOU,aAAcC,aAAa,MAAlD,WACE,SAAC,IAAD,CACEC,WAAS,EACTC,GAAI,CACFL,GAAI,EACJM,GAAI,GAENC,GAAG,QACHC,KAAK,QACLC,MAAM,QACNC,MAAOlB,EAAOI,OAAOd,MACrB6B,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQhC,OAASiC,QAAQvB,EAAOwB,OAAOlC,OACrDmC,WAAYzB,EAAOsB,QAAQhC,OAASU,EAAOwB,OAAOlC,MAClDqB,aAAa,SAEf,SAAC,IAAD,CACEC,WAAS,EACTC,GAAI,CACFL,GAAI,EACJM,GAAI,GAENC,GAAG,WACHC,KAAK,WACLC,MAAM,WACNS,KAAK,WACLR,MAAOlB,EAAOI,OAAOb,SACrB4B,SAAUnB,EAAOoB,aACjBC,MAAOrB,EAAOsB,QAAQ/B,UAAYgC,QAAQvB,EAAOwB,OAAOjC,UACxDkC,WAAYzB,EAAOsB,QAAQ/B,UAAYS,EAAOwB,OAAOjC,SACrDoB,aAAa,SAEf,SAAC,IAAD,CAAQC,WAAS,EAACe,MAAM,UAAUC,QAAQ,YAAYF,KAAK,SAA3D,wBAMP,C","sources":["components/TempComponents/LoginUser.jsx"],"sourcesContent":["import { useFormik } from 'formik';\nimport * as yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { useNavigate } from 'react-router-dom';\nimport { TextField, Button, Typography, Link } from '@mui/material';\n\nconst scheme = yup.object().shape({\n  email: yup.string().email(),\n  password: yup.string().min(6).max(12).required(),\n});\n\nconst initialValues = { email: '', password: '' };\n\nconst LoginUser = () => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm();\n    navigate('/contacts');\n  };\n\n  const formik = useFormik({\n    initialValues: initialValues,\n    validationSchema: scheme,\n    onSubmit: handleSubmit,\n  });\n\n  return (\n    <div>\n      <Typography mt={2}>\n        Not registered? Proceed to <Link href=\"register\">register page</Link>\n      </Typography>\n\n      <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\n        <TextField\n          fullWidth\n          sx={{\n            mt: 2,\n            mb: 2,\n          }}\n          id=\"email\"\n          name=\"email\"\n          label=\"email\"\n          value={formik.values.email}\n          onChange={formik.handleChange}\n          error={formik.touched.email && Boolean(formik.errors.email)}\n          helperText={formik.touched.email && formik.errors.email}\n          autoComplete=\"off\"\n        />\n        <TextField\n          fullWidth\n          sx={{\n            mt: 2,\n            mb: 2,\n          }}\n          id=\"password\"\n          name=\"password\"\n          label=\"password\"\n          type=\"password\"\n          value={formik.values.password}\n          onChange={formik.handleChange}\n          error={formik.touched.password && Boolean(formik.errors.password)}\n          helperText={formik.touched.password && formik.errors.password}\n          autoComplete=\"off\"\n        />\n        <Button fullWidth color=\"primary\" variant=\"contained\" type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default LoginUser;\n"],"names":["scheme","yup","shape","email","password","min","max","required","initialValues","dispatch","useDispatch","navigate","useNavigate","formik","useFormik","validationSchema","onSubmit","values","actions","logIn","resetForm","mt","href","handleSubmit","autoComplete","fullWidth","sx","mb","id","name","label","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","color","variant"],"sourceRoot":""}